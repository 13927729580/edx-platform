def runLettuceTests() {
    sshagent(credentials: ['jenkins-worker', 'jenkins-worker-pem'], ignoreMissing: true) {
        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '${ghprbActualCommit}']],
            doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CloneOption', honorRefspec: true,
            noTags: true, shallow: true]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'jenkins-worker',
            refspec: '+refs/heads/master:refs/remotes/origin/master +refs/pull/${ghprbPullId}/*:refs/remotes/origin/pr/${ghprbPullId}/*',
            url: 'git@github.com:edx/edx-platform.git']]]
        console_output = sh(returnStdout: true, script: 'bash scripts/all-tests.sh').trim()
        dir('stdout') {
            writeFile file: "${TEST_SUITE}-stdout.log", text: console_output
        }
    }
}

def lettuceTestCleanup() {
    archiveArtifacts allowEmptyArchive: true, artifacts: 'reports/**/*,test_root/log/**/*.log,stdout/*.log,*.log'
    junit '**/reports/acceptance/*.xml'
    sh '''source $HOME/edx-venv/bin/activate
    bash scripts/xdist/terminate_xdist_nodes.sh'''
}

pipeline {
    agent { label "jenkins-worker" }
    options {
        timestamps()
        timeout(60)
    }
    environment {
        XDIST_CONTAINER_SUBNET = credentials('XDIST_CONTAINER_SUBNET')
        XDIST_CONTAINER_SECURITY_GROUP = credentials('XDIST_CONTAINER_SECURITY_GROUP')
        XDIST_CONTAINER_TASK_NAME = "jenkins-worker-task"
        XDIST_GIT_BRANCH = "${ghprbActualCommit}"
    }
    stages {
        stage('Run Tests') {
            parallel {
                stage("lms-acceptance") {
                    agent { label "jenkins-worker" }
                    environment {
                        TEST_SUITE = "lms-acceptance"
                        XDIST_NUM_TASKS = 2
                        XDIST_REMOTE_NUM_PROCESSES = 2
                    }
                    steps {
                        script {
                            runLettuceTests()
                        }
                    }
                    post {
                        always {
                            script {
                                lettuceTestCleanup()
                            }
                        }
                    }
                }
                stage("cms-acceptance") {
                    agent { label "jenkins-worker" }
                    environment {
                        TEST_SUITE = "cms-acceptance"
                        XDIST_NUM_TASKS = 2
                        XDIST_REMOTE_NUM_PROCESSES = 2
                    }
                    steps {
                        script {
                            runLettuceTests()
                        }
                    }
                    post {
                        always {
                            script {
                                lettuceTestCleanup()
                            }
                        }
                    }
                }
            }
        }
    }
}
